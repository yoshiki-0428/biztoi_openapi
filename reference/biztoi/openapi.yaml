openapi: 3.0.0
info:
  title: BizToi
  version: '1.0'
  contact:
    name: BizToi
  description: BizToi API
servers:
  - url: 'http://localhost:8000/api'
paths:
  /books/create:
    parameters: []
    post:
      summary: Book Create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/book.v1.json
              examples: {}
      description: 本の情報を作成する、本、問題、質問が作成されていない場合作成を行う
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/book.v1.json
      operationId: BookCreate
      tags: []
  /books:
    get:
      summary: Book List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/book.v1.json
      description: すべての本を取得
      parameters: []
      operationId: Books
    parameters: []
  /users/me:
    get:
      summary: User info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/user.v1.json
      description: ユーザ情報
      parameters:
        - schema:
            type: string
          in: query
          name: code
          required: true
      operationId: UserInfo
  /auth/token:
    get:
      summary: Auth Get Token
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: ''
      description: アクセストークン取得
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: AWS Cognitoより返却される認証コード
          required: true
      operationId: AuthGetToken
  /auth/login:
    get:
      summary: Auth Login
      tags: []
      responses:
        '200':
          description: ''
        '303':
          description: See Other
      description: ログイン画面に遷移する
      parameters:
        - schema:
            type: string
          in: query
          name: redirect_uri
          description: リダイレクト対象URL
          required: true
      operationId: AuthLogin
  '/toi/{book_id}':
    get:
      summary: Toi List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/toi.v1.json
      description: 本に紐づく問題を取得する
      operationId: ToiList
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        description: ''
        required: true
  '/questions/{toi_id}':
    parameters:
      - schema:
          type: string
        name: toi_id
        in: path
        required: true
    get:
      summary: Qustions List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/toi.v1.json
      description: 問題に紐づく質問の取得
      operationId: QustionsList
  '/answers/{toi_id}':
    parameters:
      - schema:
          type: string
        name: toi_id
        in: path
        required: true
    get:
      summary: Answers List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/answerhead.v1.json
      description: 本と問題に紐づく回答の取得
      operationId: AnswersList
  /books/favorite:
    get:
      summary: Book Favorite List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/book.v1.json
      description: お気に入りの本を取得
      parameters: []
      operationId: BooksFavorite
    parameters: []
    post:
      summary: Book Favorite List Post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/bookfavorite.v1.json
      parameters: []
      description: 本をお気に入り登録する
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/bookfavorite.v1.json
        description: ''
      operationId: BooksFavoritePost
      tags: []
    delete:
      summary: Book Favorite List Delete
      responses:
        '200':
          description: OK
      description: お気に入りを取り消しする
      operationId: BooksFavoriteDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/bookfavorite.v1.json
      tags: []
components:
  schemas: {}
  securitySchemes: {}
