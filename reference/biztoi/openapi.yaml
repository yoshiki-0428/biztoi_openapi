openapi: 3.0.0
info:
  title: BizToi
  version: '1.0'
  contact:
    name: BizToi
  description: BizToi API
servers:
  - url: 'http://localhost:8000/api'
paths:
  /books:
    get:
      summary: Book List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
              examples: {}
      description: すべての本を取得
      parameters: []
      operationId: Books
    parameters: []
    post:
      summary: ''
      responses:
        '200':
          description: OK
      description: 本の情報を作成する、本、問題、質問が作成されていない場合作成を行う
      operationId: BooksPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      tags: []
  /users/me:
    get:
      summary: User info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: ユーザ情報
      parameters:
        - schema:
            type: string
          in: query
          name: code
          required: true
      operationId: UserInfo
  /auth/token:
    get:
      summary: Auth Get Token
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorize'
      description: アクセストークン取得
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: AWS Cognitoより返却される認証コード
          required: true
      operationId: AuthGetToken
  /auth/login:
    get:
      summary: Auth Login
      tags: []
      responses:
        '200':
          description: ''
        '303':
          description: See Other
      description: ログイン画面に遷移する
      parameters:
        - schema:
            type: string
          in: query
          name: redirect_uri
          description: リダイレクト対象URL
          required: true
      operationId: AuthLogin
  '/books/{book_id}/toi':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
    get:
      summary: GetToi
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Toi'
      description: 本に紐づく問一覧を取得する
      operationId: GetBookToi
  '/books/{book_id}/toi/{toi_id}/questions':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
      - schema:
          type: string
        name: toi_id
        in: path
        required: true
    get:
      summary: GetBookQuestion
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionAnswer'
      description: 本に紐づく質問一覧を取得する
      operationId: GetBookQuestion
  '/books/{book_id}/toi/{toi_id}/answers/{question_id}':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
      - schema:
          type: string
        name: toi_id
        in: path
        required: true
      - schema:
          type: string
        name: question_id
        in: path
        required: true
    post:
      summary: PostAnswer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
      description: 回答ヘッダー情報の作成（回答し始めた際に作成される）
      operationId: PostAnswer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
      tags: []
      parameters: []
  '/books/{book_id}/toi/{toi_id}/answers':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
      - schema:
          type: string
        name: toi_id
        in: path
        required: true
    post:
      summary: PostAnswerHead
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerHead'
      description: Answerを保存する
      operationId: PostAnswerHead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerHead'
      tags: []
    get:
      summary: GetAnswers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnswerHead'
      operationId: GetAnswers
      description: 他の回答一覧を取得
      tags: []
components:
  schemas:
    Answer:
      title: Answer
      type: object
      description: ''
      properties:
        id:
          type: integer
        answer_head_id:
          type: integer
        question_id:
          type: integer
        picture_url:
          type: string
        answer:
          type: string
        inserted:
          type: string
        modified:
          type: string
      required:
        - answer_head_id
        - question_id
        - answer
        - inserted
    AnswerHead:
      title: AnswerHead
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        toi_id:
          type: integer
        publish_flg:
          type: boolean
        inserted:
          type: string
        modified:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
      required:
        - id
        - user_id
        - toi_id
        - publish_flg
        - inserted
    Book:
      title: Book
      type: object
      properties:
        id:
          type: integer
        isbn:
          type: string
        detail:
          type: string
        pictureUrl:
          type: string
        linkUrl:
          type: string
        title:
          type: string
      required:
        - id
        - detail
        - title
    BookFavorite:
      title: BookFavorite
      type: object
      properties:
        book_id:
          type: integer
        favorite_id:
          type: integer
    Question:
      title: Question
      type: object
      properties:
        id:
          type: integer
        toi_id:
          type: integer
        title:
          type: string
        detail:
          type: string
        order_id:
          type: integer
        required:
          type: boolean
        timing:
          type: string
        inserted:
          type: string
        modified:
          type: string
      required:
        - id
        - toi_id
        - title
        - detail
        - order_id
        - required
        - timing
        - inserted
    Toi:
      title: Toi
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        book_id:
          type: integer
        picture_url:
          type: string
        title:
          type: string
        detail:
          type: string
        content:
          type: string
        publish_flg:
          type: boolean
        inserted:
          type: string
        modified:
          type: string
      required:
        - id
        - user_id
        - book_id
        - title
        - detail
        - publish_flg
        - inserted
    User:
      title: User
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        picture_url:
          type: string
        name:
          type: string
      required:
        - id
        - name
        - email
    Authorize:
      title: Authorize
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token
    QuestionAnswer:
      title: QuestionAnswer
      type: object
      properties:
        question:
          $ref: '#/components/schemas/Question'
        answer:
          $ref: '#/components/schemas/Answer'
  securitySchemes: {}
