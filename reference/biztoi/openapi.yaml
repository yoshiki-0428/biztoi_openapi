openapi: 3.0.0
info:
  title: BizToi
  version: '1.0'
  contact:
    name: BizToi
  description: BizToi API
servers:
  - url: 'http://localhost:8000/api/'
paths:
  '/books/{book_id}':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
    post:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/book.v1.json
              examples: {}
      description: 本の情報を作成する、本、問題、質問が作成されていない場合作成を行う
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/book.v1.json
  /books/list:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/book.v1.json
      description: 本を取得
      parameters:
        - schema:
            type: string
            default: MOST_POPULAR
            enum:
              - MOST_POPULAR
              - NEWEST
              - YOUR_LIST
          in: query
          name: sort
          required: true
          description: ''
        - schema:
            type: string
            default: '20'
          in: query
          name: limit
          required: true
  /users/me:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/user.v1.json
      description: ユーザ情報
      parameters:
        - schema:
            type: string
          in: query
          name: code
          required: true
  /auth/token:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: ''
      description: アクセストークン取得
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: AWS Cognitoより返却される認証コード
          required: true
  /auth/login:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '303':
          description: See Other
      description: ログイン画面に遷移する
      parameters:
        - schema:
            type: string
          in: query
          name: redirect_uri
          description: リダイレクト対象URL
          required: true
  '/books/{book_id}/toi/list':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/toi.v1.json
      description: 本に紐づく問題を取得する
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        description: ''
        required: true
  '/toi/{toi_id}/questions/list/':
    parameters:
      - schema:
          type: string
        name: toi_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/toi.v1.json
      description: 問題に紐づく質問の取得
  '/toi/{toi_id}/answers/list/':
    parameters:
      - schema:
          type: string
        name: toi_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/answerhead.v1.json
      description: 本と問題に紐づく回答の取得
components:
  schemas: {}
  securitySchemes: {}
