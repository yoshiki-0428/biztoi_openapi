openapi: 3.0.0
info:
  title: BizToi
  version: '1.0'
  contact:
    name: BizToi
  description: BizToi API
servers:
  - url: 'http://localhost:8000/api'
paths:
  /books:
    get:
      summary: Book List
      tags:
        - biztoi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
              examples: {}
      description: すべての本を取得
      parameters: []
      operationId: Books
    parameters: []
    post:
      summary: ''
      responses:
        '200':
          description: OK
      description: 本の情報を作成する、本、問題、質問が作成されていない場合作成を行う
      operationId: BooksPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      tags:
        - biztoi
  '/books/{book_id}':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
    get:
      summary: GetToi
      tags:
        - biztoi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not Found
      description: 本情報を取得する
      operationId: GetBookId
  '/books/{book_id}/toi':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
    get:
      summary: GetToi
      tags:
        - biztoi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Toi'
      description: 本に紐づく問を取得する
      operationId: GetBookToi
    post:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Toi'
      operationId: PostToi
      description: Toi情報を作成する
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Toi'
      tags:
        - biztoi
  '/books/{book_id}/toi/questions':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
    get:
      summary: GetBookQuestion
      tags:
        - biztoi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
      description: 本に紐づく質問一覧を取得する
      operationId: GetBookQuestions
    post:
      summary: ''
      responses:
        '200':
          description: OK
      operationId: PostQuestion
      description: 質問情報を作成する
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      tags:
        - biztoi
  '/books/{book_id}/toi/questions/{question_id}':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
      - schema:
          type: string
        name: question_id
        in: path
        required: true
    get:
      summary: GetBookQuestion
      tags:
        - biztoi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
      description: 本に紐づく質問を取得する（Storeに存在しなかった場合）
      operationId: GetBookQuestion
  '/books/{book_id}/toi/answers':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
    get:
      summary: GetAnswers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnswerHead'
      description: 回答ヘッダー+回答データの取得
      operationId: GetAnswers
      tags:
        - biztoi
      parameters: []
  '/books/{book_id}/toi/answers/me':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
    get:
      summary: GetAnswersMe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerHead'
      description: 回答ヘッダー+回答データの取得(自ユーザ)
      operationId: GetAnswersMe
      tags:
        - biztoi
      parameters: []
    post:
      summary: PostAnswerHead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerHead'
      description: 回答ヘッダー作成(自ユーザ)
      operationId: PostAnswerHead
      tags:
        - biztoi
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerHead'
  '/books/{book_id}/toi/answers/me/{question_id}':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
      - schema:
          type: string
        name: question_id
        in: path
        required: true
    get:
      summary: GetAnswerByQuestion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
      description: 質問に紐付いた回答データの取得（自ユーザ）
      operationId: GetAnswerByQuestion
      tags:
        - biztoi
      parameters: []
    post:
      summary: PostAnswerByQuestion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
      description: 質問に紐付いた回答データの作成（自ユーザ）
      operationId: PostAnswer
      tags:
        - biztoi
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerList'
  /users/me:
    get:
      summary: User info
      tags:
        - biztoi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BizToiUser'
      description: ユーザ情報
      parameters:
        - schema:
            type: string
          in: query
          name: code
          required: true
      operationId: UserInfo
  /auth/login:
    get:
      summary: Auth Login
      tags:
        - biztoi
      responses:
        '200':
          description: ''
        '303':
          description: See Other
      description: ログイン画面に遷移する
      parameters:
        - schema:
            type: string
          in: query
          name: redirect_uri
          description: リダイレクト対象URL
          required: true
      operationId: AuthLogin
  /auth/token:
    get:
      summary: Auth Get Token
      tags:
        - biztoi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorize'
      description: アクセストークン取得
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: AWS Cognitoより返却される認証コード
          required: true
      operationId: AuthGetToken
  /favorite/books:
    post:
      summary: FavoriteBooks
      tags:
        - biztoi
      responses:
        '200':
          description: OK
      description: 本をお気に入りする
      parameters: []
      operationId: FavoriteBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
    delete:
      summary: DeleteFavoriteBooks
      tags:
        - biztoi
      responses:
        '200':
          description: OK
      description: 本をお気に入り削除する
      parameters: []
      operationId: DeleteFavoriteBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
  /likes/answers:
    post:
      summary: LikesAnswers
      tags:
        - biztoi
      responses:
        '200':
          description: OK
      description: 回答をいいねする
      parameters: []
      operationId: LikesAnswers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerHead'
    delete:
      summary: DeleteLikesAnswers
      tags:
        - biztoi
      responses:
        '200':
          description: OK
      description: 回答をいいね削除する
      parameters: []
      operationId: DeleteLikesAnswers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerHead'
  '/books/{book_id}/toi/answers/{answer_id}':
    parameters:
      - schema:
          type: string
        name: book_id
        in: path
        required: true
      - schema:
          type: string
        name: answer_id
        in: path
        required: true
    get:
      summary: GetAnswer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerHead'
      description: 回答ヘッダー+回答データの取得(Single)
      operationId: GetAnswer
      tags:
        - biztoi
      parameters: []
components:
  schemas:
    Answer:
      title: Answer
      type: object
      description: ''
      properties:
        id:
          type: string
        answerHeadId:
          type: string
        questionId:
          type: string
        answer:
          type: string
        inserted:
          type: string
        modified:
          type: string
        answerType:
          type: string
          description: 'OBJECTIVE, GIST, ACTION_PLAN'
        orderId:
          type: string
          description: 順番を保持する項目
      required:
        - answerHeadId
        - questionId
        - answer
        - inserted
        - answerType
        - orderId
    AnswerHead:
      title: AnswerHead
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        publishFlg:
          type: boolean
        inserted:
          type: string
        modified:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
        toiId:
          type: string
        category:
          type: string
          description: 'Health, Amibiton, Relation, Money'
        userInfo:
          $ref: '#/components/schemas/BizToiUser'
        likeInfo:
          $ref: '#/components/schemas/AnswerLikes'
      required:
        - id
        - userId
        - publishFlg
        - inserted
    Book:
      title: Book
      type: object
      properties:
        id:
          type: string
        isbn:
          type: string
        detail:
          type: string
        pictureUrl:
          type: string
        linkUrl:
          type: string
        title:
          type: string
        author:
          type: array
          items:
            type: string
        category:
          type: array
          items:
            type: string
        isFavorite:
          type: boolean
      required:
        - id
        - detail
        - title
    Question:
      title: Question
      type: object
      properties:
        id:
          type: string
        toiId:
          type: string
        title:
          type: string
        step:
          type: number
        answerType:
          type: string
          description: 'OBJECTIVE, GIST, ACTION_PLAN'
        required:
          type: boolean
        orderId:
          type: number
          description: 順番を保証した項目
        nextQuestionId:
          type: string
          description: 次の質問を参照する項目
      required:
        - id
        - toiId
        - title
        - step
        - orderId
        - required
        - answerType
    Toi:
      title: Toi
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        bookId:
          type: string
        title:
          type: string
        detail:
          type: string
        publishFlg:
          type: boolean
        inserted:
          type: string
        modified:
          type: string
      required:
        - id
        - userId
        - bookId
        - title
        - detail
        - publishFlg
        - inserted
    BizToiUser:
      title: BizToiUser
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        pictureUrl:
          type: string
        nickname:
          type: string
        country:
          type: string
      required:
        - id
        - email
        - nickname
    Authorize:
      title: Authorize
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
    AnswerList:
      title: AnswerList
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
      required:
        - answers
    AnswerLikes:
      title: AnswerLikes
      type: object
      properties:
        isActive:
          type: boolean
        sum:
          type: number
  securitySchemes: {}
